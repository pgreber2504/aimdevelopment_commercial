$color-primary: #5ec576;
$color-tertiary: #ff585f;
$color-primary-darker: #4bbb7d;
$color-tertiary-darker: #fd424b;
$color-primary-opacity: #5ec5763a;
$color-tertiary-opacity: #ff58602d;
$gradient-primary: linear-gradient(to top left, #39b385, #9be15d);
$background: #f3f3f3;
$background-opacity: rgba(255, 255, 255, 0.7);

$font-content: 1.2rem;
$font-header: 1.8rem;
$font-section-header: 2.4rem;
$font-section-descr: 2rem;
$font-big-header: 3rem;
$font-big-desc: 2.5rem;

$media-min-mobile-width: 320px;
$media-min-tablet-width: 576px;
$media-min-desktop-width: 768px;
$media-min-large-desktop-width: 1280px;

@mixin breakpoint($point) {
  @if $point == small {
    @media (min-width: 20em) {
      @content;
    }
  } @else if $point == medium {
    @media (min-width: 40em) {
      @content;
    }
  } @else if $point == large {
    @media (min-width: 48em) {
      @content;
    }
  }
}

@mixin fluid-typography($minFont, $maxFont, $minBreakpoint, $maxBreakpoint) {
  /* Define variable for media query */
  $maxLessOne: $maxBreakpoint - 1;

  /* Define variable for fallback */
  $avg: ($maxFont + $minFont) / 2;

  /* Base font size */
  font-size: #{$minFont}px;

  @media (min-width: #{$minBreakpoint}px) and (max-width: #{$maxLessOne}px) {
    /* Adds a fallback for unsupported browsers */
    font-size: #{$avg}px;

    /* The fluid typography magic ðŸŒŸ  */
    font-size: calc(
      #{$minFont}px + (#{$maxFont} - #{$minFont}) *
        (100vw - #{$minBreakpoint}px) / (#{$maxBreakpoint} - #{$minBreakpoint})
    );
  }

  @media (min-width: #{$maxBreakpoint}px) {
    font-size: #{$maxFont}px;
  }
}
